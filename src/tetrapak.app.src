% vim: filetype=erlang
{application, tetrapak,
 [{description, "Erlang application packaging tool"},
  {applications, [kernel, stdlib, compiler, edoc, tools, parsetools, common_test]},
  {registered, [tetrapak_io]},
  {env,
   [{debug, false},
    {cli_options, []},
    {tasks, [
            {"doc:edoc", tetrapak_task_doc, "Generate edoc documentation"},
            {"clean:edoc", tetrapak_task_doc, "Delete generated documentation"},
            {"check:xref", tetrapak_task_check, "Check inter-module calls"},
            {"check:appmodules", tetrapak_task_check, "Check app file module list"},
            {"config:appfile", tetrapak_task_config, "Read the application resource file"},
            {"config:vcs", tetrapak_task_config, "Gather information from the VCS"},
            {"build:erlang", tetrapak_task_erlc, "Compile Erlang modules"},
            {"build:yecc", tetrapak_task_erlc, "Compile yecc parsers (.yrl) to Erlang", [{run_before, ["build:erlang"]}]},
            {"build:leex", tetrapak_task_erlc, "Compile lexical analysers (.xrl) to Erlang", [{run_before, ["build:erlang"]}]},
            {"build:appfile", tetrapak_task_appsrc, "Generate the application resource file"},
            {"clean:erlang", tetrapak_task_erlc, "Delete compiled Erlang modules"},
            {"clean:yecc", tetrapak_task_erlc, "Delete compiled yecc parsers"},
            {"clean:leex", tetrapak_task_erlc, "Delete compiled lexical analysers"},
            {"clean:appfile", tetrapak_task_appsrc, "Delete generated application resource file"},
            {"pkg:deb", tetrapak_task_pkg_deb, "Create a binary debian package"},
            {"pkg:debsrc", tetrapak_task_pkg_deb, "Create a debian source package"},
            {"pkg:ipkg", tetrapak_task_pkg_ipkg, "Create a binary ipkg"},
            {"install:copy", tetrapak_task_install_copy, "install a copy of the application into Erlang lib dir"},
            {"clean:dist", tetrapak_task_pkg_deb, "Delete packages"},
            {"shell", tetrapak_task_shell, "Start the Erlang shell"},
            {"tetrapak:reload", tetrapak_task_shell, "Reload changed modules"},
            {"tetrapak:startapp", tetrapak_task_shell, "Start the current application"},
            {"tetrapak:tpk-help", tetrapak_task_shell, "Show help for the tpk module"},
            {"info:deps", tetrapak_task_info, "Show application dependencies"},
            {"info:deps:tree", tetrapak_task_info, "Show application dependencies as a tree"},
            {"test:ct", tetrapak_task_common_test, "Run unit tests with common_test"},
            {"clean:testlog", tetrapak_task_common_test, "Delete common_test HTML logs"}
           ]},
   {config, [
             {"build.erlc_options", []},
             {"build.vcs_type", git},
             {"build.version", undefined},
             {"package.architecture", "all"},
             {"package.outdir", "dist"},
             {"package.maintainer", "Joe User <joe@example.com>"},
             {"package.exclude", undefined},
             {"package.extra_apps", []},
             {"package.extra_build_apps", []},
             {"package.include_src", false},
             {"package.include_doc", false},
             {"package.use_erlrc", false},
             {"package.deb.section", "misc"},
             {"package.deb.priority", "optional"},
             {"package.deb.erlang_base_apps", [kernel, stdlib, compiler, sasl]},
             {"package.deb.dependencies", []},
             {"package.deb.build_dependencies", []},
             {"edoc.outdir", "doc"},
             {"edoc.private", false},
             {"edoc.hidden", false},
             {"edoc.todo", false},
             {"edoc.pretty_print", true},
             {"edoc.sort_functions", false},
             {"test.ct.srcdir", "test"},
             {"test.ct.logdir", "test-log"},
             {"test.ct.suite", "all"},
             {"xref.ignore_undef", []}
            ]}]}
]}.
